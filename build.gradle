buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
}

plugins {
  id "io.spring.nohttp" version "0.0.8"
  id "checkstyle"
  id "jacoco"
}

if (JavaVersion.current().isJava8Compatible())
{
  allprojects {
    tasks.withType(Javadoc) {
      options.addStringOption('Xdoclint:none', '-quiet')
    }
  }
}

// this needs to go here, otherwise it can't find config
apply plugin: 'io.spring.nohttp'

allprojects {
  apply plugin: 'java'
  apply plugin: 'idea'
  apply plugin: 'checkstyle'
  apply plugin: 'jacoco'

  repositories {
    mavenCentral()
  }

  dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.11'
  }


}

ext {
  bcTestDataHome = file('core/src/test/data').absolutePath
}

task printProperties {
  doLast {
    println bcTestDataHome
  }
}

subprojects {
  apply plugin: 'eclipse'

  JavaVersion current = JavaVersion.current();
  if (current.compareTo(JavaVersion.VERSION_1_8) <= 0)
  {
    ext.vmrange = 'jdk15to18'
    sourceCompatibility = 1.5
    targetCompatibility = 1.5
  }
  else
  {
    ext.vmrange = 'jdk18on'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
  }

  version = '1.70'

 task testFull(type:Test) {
    systemProperties = [
            'bc.test.data.home': bcTestDataHome,
            'test.full':'true'
    ]
    systemProperty 'bc.test.data.home', bcTestDataHome
    maxHeapSize = "1536m"

    finalizedBy jacocoTestReport

    filter {
      includeTestsMatching "AllTest*"
    }
  }

  test {
    systemProperty 'bc.test.data.home', bcTestDataHome
    maxHeapSize = "1536m"

    finalizedBy jacocoTestReport

    filter {
      includeTestsMatching "AllTest*"
    }
  }


  dependencies {
    checkstyle files("$rootDir/config/checkstyle/lib/methodchecker.jar")
    checkstyle 'com.puppycrawl.tools:checkstyle:9.0'
  }

  checkstyle {
    configFile file("$rootDir/config/checkstyle/checkstyle.xml");
    toolVersion '9.0'; // your choice here
    sourceSets = [project.sourceSets.main]
  }


  jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
  }

  jacoco {
    reportsDirectory =  layout.buildDirectory.dir("jacoco")
  }

}

test.dependsOn([':core:test', ':prov:test', ':pkix:test', ':mail:test', 'pg:test', ':tls:test'])
